<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Configure to plugin JSON as request and response in method handler -->
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</beans:bean>	
	 <!--beans:bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">    
 		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>    
		<beans:property name="url" value="jdbc:oracle:thin:@172.19.54.64:1521:pindb"/>    
		<beans:property name="username" value="pinb_4"/>    
		<beans:property name="password" value="pinb_4"/>    
	</beans:bean-->
	
	 <beans:bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">    
 		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>    
		<beans:property name="url" value="jdbc:mysql://localhost:3306/TestDatabase?useSSL=false"/>    
		<beans:property name="username" value="root"/>    
		<beans:property name="password" value="root"/>    
	</beans:bean>
	
	<!--  beans:bean id="jt" class="org.springframework.jdbc.core.JdbcTemplate">    
		<beans:property name="dataSource" ref="ds"/>    
	</beans:bean-->  
	
	<!--  beans:bean id="dao" class="com.spring.demo.dao.NumberDAO">    
	<beans:property name="template" ref="jt"/>  
</beans:bean-->

<beans:bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">    
	<beans:property name="dataSource" ref="ds"/> 
	 <beans:property name="packagesToScan" value="com.spring.demo.entity" />
	<!-- beans:property name="mappingResources">
		<beans:list>
			<beans:value>idgenerator.hbm.xml</beans:value>
		</beans:list>
	</beans:property-->
	<beans:property name="hibernateProperties">
		<beans:props>
			<!--beans:prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</beans:prop-->
			<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
			<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>  
            <beans:prop key="hibernate.show_sql">none</beans:prop>  
		</beans:props>  
	</beans:property>
</beans:bean>
	
	<context:component-scan base-package="com.spring.demo" />
	
</beans:beans>
